======================
DB_DUMP工具使用说明
======================

:作者: limodou
:联系: limodou@gmail.com
:版本: 0.1
:BLOG: http://www.donews.net/limodou
:版权: FDL

.. contents:: 目录
.. sectnum::

本工具是一个用于django的数据库备份和恢复的小工具。同时，在恢复时，它支持部分Model结构的变化，因此在某些情况下也可以用于数据库变化后的数据导入工作。

它的功能包括：备份和恢复。

备份功能
----------

命令行::

    python db_dump.py [-svdh] [--settings] dump [applist]

applist 可以不填，则表示全部app都要dump出来，applist可以列出想要dump出来的列表，可以为一个或多个。

相关参数说明::

    -s 表示输出结果显示在终端上，缺省为写入文件
    -v 表示显示执行信息，缺省为不显示
    -d 表示数据输出路径，缺省为当前目录下的 datadir 目录，如果不存在会自动创建
    -h 显示帮助信息
    --settings settings模块信息，缺省为当前目录下的settings.py

目前只支持生成Python格式。生成的格式是一个标准的Python模块，形如::

    dump = {'table': 'tablename', 'records': [[...]], 'fields': [...]} 

其中table对应数据库的表名，records为结果，它是一个list的list结构，即每行记录是一个list。fields是每行记录对应的字段名。

恢复功能
-----------

命令行::

    python db_dump.py [-svdrh] [--settings] load [applist]

相同的标志位参见上面的描述。其它的还有::

    -r 表示是否在装入时不删除表中数据，缺省为先删除后装入

使用这个工具不仅可以恢复数据库，还可以应付简单的数据库的变化。它可以自动根据变化后的Model从备份数据中挑选相应的字段，同时还可以处理Model中的缺省值，如default参数和日期相关类形的auto_now和auto_now_add参数。而且你还可以手工修改备份数据文件，增加default域，对相应的字段指定缺省值，基本格式为::

    'defalt':{'fieldname':('type', 'value')}

default域是一个字典，键值就是对应的字段名，它的值为一个二元的tuple。第一个为type域，表示值的类型，第二个为值。对于不同的类型，值的含义不同，列举出下：

=============   ============================   =========================================================
 'type'          'value'                        说明
=============   ============================   =========================================================
 'value'         值                             表示直接使用value域
 'reference'     引用字段名                     表示这个字段值将使用其它的字段值，适用于字段名发生变化
 'date'          'now'|'yyyy-mm-dd'             表示是一个日期类型，如果为now表示自动使用当前时间，如果
                                                不为'now'则值指定的日期值，它是一个字符串，有格式要求。
 'datetime'      'now'|'yyyy-mm-dd hh:mm:ss'    同上 
=============   ============================   =========================================================

对于缺省值处理的策略时，先根据Model的定义来生成相关字段的缺省值，然后再根据数据文件中的default域来替换相应的值，即当两个地方(Model和数据文件)中对于一个字段都定义了缺省值时，则以数据文件中的为准。

根据缺省值的处理，基本上可以支持，象：改名，新增字段的处理。因此使用这个工具，可以相对简单地完成数据库的升级工作。

不过我未经过太充分的测试，而且后台数据库目前我只在sqlite下测试过。欢迎使用，并给出改进意见。

下载的话目前请从SharePlat的svn中取得。

svn http://cvs.woodpecker.org.cn/svn/woodpecker/SharePlat/trunk
